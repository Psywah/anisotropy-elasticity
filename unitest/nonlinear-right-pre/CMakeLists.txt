# This file is automatically generated by running
#
#     cmake/scripts/generate-cmakefiles
#
# Require CMake 2.8
cmake_minimum_required(VERSION 2.8)

set(PROJECT_NAME AnisoElas)
project(${PROJECT_NAME})

# Set verbose output while testing CMake
#set(CMAKE_VERBOSE_MAKEFILE 1)

# Set CMake behavior
cmake_policy(SET CMP0004 OLD)

# Get DOLFIN configuration data (DOLFINConfig.cmake must be in
# DOLFIN_CMAKE_CONFIG_PATH)
find_package(DOLFIN)

# Need to get VTK config because VTK uses advanced VTK features which
# mean it's not enough to just link to the DOLFIN target. See
# http://www.vtk.org/pipermail/vtk-developers/2013-October/014402.html
find_package(VTK HINTS ${VTK_DIR} $ENV{VTK_DIR} NO_MODULE QUIET)

# Default build type (can be overridden by user)
if (NOT CMAKE_BUILD_TYPE)
  set(CMAKE_BUILD_TYPE "RelWithDebInfo" CACHE STRING
    "Choose the type of build, options are: Debug MinSizeRel Release RelWithDebInfo." FORCE)
endif()

# Compiler definitions
add_definitions(${DOLFIN_CXX_DEFINITIONS})

# Compiler flags
set(CMAKE_CXX_FLAGS "${DOLFIN_CXX_FLAGS} ${CMAKE_CXX_FLAGS}")

# Set useful directory
set(NE_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/src)
set(NE_SRC_DIR ${CMAKE_CURRENT_SOURCE_DIR}/src)
#set(NE_LIB_DIR ${CMAKE_CURRENT_BINARY_DIR}/lib)
#set(EXECUTABLE_OUTPUT_PATH ${CMAKE_CURRENT_BINARY_DIR})
#set(LIBRARY_OUTPUT_PATH ${CMAKE_CURRENT_BINARY_DIR}/lib)

# Include directories
include_directories(${NE_INCLUDE_DIR})
include_directories(${DOLFIN_INCLUDE_DIRS})
include_directories(SYSTEM ${DOLFIN_3RD_PARTY_INCLUDE_DIRS})

file(GLOB NE_LIB_SRC ${NE_SRC_DIR}/*.cpp)
add_library(nonlinear_precondition STATIC ${NE_LIB_SRC})

# Executable
file( GLOB EXESRC RELATIVE "${CMAKE_CURRENT_SOURCE_DIR}" Main*.cpp)

foreach( srcfile ${EXESRC} )
    string( REGEX REPLACE "\\.[^\\.]*$" ".ex" exectmp ${srcfile} )
    string( REGEX REPLACE "Main" "" execfile ${exectmp} )
#    message( "${execfile} ${srcfile}" )
    add_executable( ${execfile} ./${srcfile} )

# Target libraries
    target_link_libraries(${execfile} nonlinear_precondition ${DOLFIN_LIBRARIES})
endforeach(srcfile)

# Executable
#add_executable(${PROJECT_NAME} MainAnisoElas.cpp ${AE_LIB_SRC})
#add_executable(IsoElas MainIsoElas.cpp ${AE_LIB_SRC})

# Target libraries
#target_link_libraries(${PROJECT_NAME}  ${DOLFIN_LIBRARIES})
#target_link_libraries(IsoElas  ${DOLFIN_LIBRARIES})
